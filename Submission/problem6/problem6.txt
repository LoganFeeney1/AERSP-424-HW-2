Question 6 (5 points):

From Question3, what issues you might obtain during the development of
the program? What issues do you think will happen if some of the actions,
e.g., waking up the ATC, checking the traffic pattern, entering the traffic
pattern, diverging to another airport, etc., take time to finish? And what
will be a potential solution for the issues? 


Answer:

One issue that could occur, especially with the multithreaded system, could be the occurance of race conditions when multiple threads try to access data concurrently and alters the sequence of execution in the program. I personally ran into this problem while working with problem 3. the solution to this is to incorperate locks and mutexes to limit only one thread to modify or access shared data at a single time. Talking about locks, there are also the issues of deadlocks where certain threads are waiting to access a resource but a different thread is holding the resource and essentially blocking the rest from access the data. This can be corrected through program design and implentation of lock ordering in addition to unlocking a resource once a thread has finished with it.